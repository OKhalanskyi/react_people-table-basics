{"version":3,"sources":["pages/Layout.tsx","pages/Home.page.tsx","api.ts","components/Loader/Loader.tsx","components/PersonTableRow.tsx","components/PersonTable.tsx","components/PersonWidget.tsx","pages/People.page.tsx","pages/Error.page.tsx","App.tsx","index.tsx"],"names":["Layout","_jsxs","children","_jsx","className","role","NavLink","_ref","isActive","cn","to","_ref2","Outlet","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","getClassBySex","person","sex","PersonTableRow","isSelected","motherSlug","fatherSlug","Link","concat","slug","name","born","died","motherName","fatherName","PersonTable","people","personSlug","useParams","_useState","useState","_useState2","_slicedToArray","selectedPerson","setSelectedPerson","getMotherSlug","personMother","find","mother","getFatherSlug","personFather","father","useEffect","length","map","PersonWidget","setPeople","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","loadPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","peopleFromApi","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","PeoplePage","ErrorPage","App","Routes","Route","path","element","index","Navigate","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.0c1ea44b.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Outlet, NavLink } from 'react-router-dom';\n\nconst Layout:React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <Outlet />\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\n\nconst HomePage:React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n\nexport default HomePage;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ntype PersonTableRowProps = {\n  person: Person,\n  isSelected: boolean,\n  motherSlug?: string,\n  fatherSlug?: string,\n};\n\nconst getClassBySex = (person: Person) => {\n  return cn({\n    'has-text-danger': person.sex === 'f',\n    'has-text-link': person.sex === 'm',\n  });\n};\n\nconst PersonTableRow: React.FC<PersonTableRowProps> = (\n  {\n    person,\n    isSelected,\n    motherSlug,\n    fatherSlug,\n  },\n) => {\n  return (\n    <tr\n      className={cn({\n        'has-background-warning': isSelected,\n      })}\n      data-cy=\"person\"\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={getClassBySex(person)}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {\n          motherSlug\n            ? (\n              <Link\n                to={`/people/${motherSlug}`}\n                className=\"has-text-danger\"\n              >\n                {person.motherName}\n              </Link>\n            )\n            : (<p>{person.motherName ? person.motherName : '-'}</p>)\n        }\n      </td>\n      <td>\n        {\n          fatherSlug\n            ? (\n              <Link\n                to={`/people/${fatherSlug}`}\n                className=\"has-text-link\"\n              >\n                {person.fatherName}\n              </Link>\n            )\n            : (<p>{person.fatherName ? person.fatherName : '-'}</p>)\n        }\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonTableRow;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport PersonTableRow from './PersonTableRow';\n\ntype PersonTableProps = {\n  people: Person[],\n};\n\nconst PersonTable:React.FC<PersonTableProps> = ({ people }) => {\n  const { personSlug } = useParams();\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n  const getPersonBySlug = (slug: string) => {\n    return people.find(person => person.slug === slug);\n  };\n\n  const getMotherSlug = (person: Person) => {\n    const personMother = people.find(\n      mother => person.motherName === mother.name,\n    );\n\n    return personMother?.slug;\n  };\n\n  const getFatherSlug = (person: Person) => {\n    const personFather = people.find(\n      father => person.fatherName === father.name,\n    );\n\n    return personFather?.slug;\n  };\n\n  useEffect(() => {\n    if (personSlug) {\n      const person = getPersonBySlug(personSlug);\n\n      if (person) {\n        setSelectedPerson(person);\n      }\n    }\n  }, [personSlug]);\n\n  if (people.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map(person => (\n            <PersonTableRow\n              person={person}\n              key={person.slug}\n              isSelected={selectedPerson?.slug === person.slug}\n              motherSlug={getMotherSlug(person)}\n              fatherSlug={getFatherSlug(person)}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nexport default PersonTable;\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport PersonTable from './PersonTable';\n\nconst PersonWidget:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        const peopleFromApi = await getPeople();\n\n        setPeople(peopleFromApi);\n      } catch (e) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  if (error) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (loading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <PersonTable people={people} />\n  );\n};\n\nexport default PersonWidget;\n","import React from 'react';\nimport PersonWidget from '../components/PersonWidget';\n\nconst PeoplePage:React.FC = () => {\n  return (\n    <div>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          <PersonWidget />\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\nconst ErrorPage:React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n\nexport default ErrorPage;\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport Layout from './pages/Layout';\nimport HomePage from './pages/Home.page';\nimport PeoplePage from './pages/People.page';\nimport ErrorPage from './pages/Error.page';\n\nexport const App = () => (\n  <Routes>\n    <Route path=\"/\" element={<Layout />}>\n      <Route index element={<HomePage />} />\n\n      <Route path=\"people\">\n        <Route path=\":personSlug?\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"*\" element={<ErrorPage />} />\n    </Route>\n  </Routes>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}